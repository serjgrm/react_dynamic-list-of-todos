{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","types/FilterBy.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setTodoModal","setModalLoading","className","map","todo","id","completed","cn","title","type","onClick","setTimeout","handleModal","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","FilterBy","Loader","TodoModal","todoModal","loadingModal","user","href","name","TodoFilter","setFilterBy","handleFilterInput","setFilterInput","filterInput","onChange","event","selectedFilter","target","value","All","Active","Completed","placeholder","style","pointerEvents","visibility","App","useState","setTodos","loadingAll","setAllLoading","setUser","filterBy","filteredTodos","useMemo","filter","toddo","filteredTodosState","setFilteredTodosState","useEffect","toLowerCase","includes","loadAllTodds","a","allGoods","loadUser","userr","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6646cab4.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodoModal: Dispatch<SetStateAction<Todo | null>>,\n  setModalLoading: Dispatch<SetStateAction<boolean>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoModal,\n  setModalLoading,\n}) => {\n  const handleModal = (todo: Todo | null) => {\n    setModalLoading(true);\n    setTodoModal(todo);\n    setTimeout(() => {\n      setModalLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(0)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'All',\n  Completed = 'Completed',\n  Active = 'Active',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todoModal: Todo,\n  loadingModal: boolean,\n  user: User | null,\n  setTodoModal: Dispatch<SetStateAction<Todo | null>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoModal,\n  loadingModal,\n  user,\n  setTodoModal,\n}) => {\n  // useEffect(() => {\n\n  // }, [todoModal]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {\n        loadingModal ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todoModal.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setTodoModal(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todoModal.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todoModal.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n                <a href=\"mailto:Sincere@april.biz\">{user && user.name}</a>\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","import { Dispatch, SetStateAction } from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  setFilterBy: Dispatch<SetStateAction<FilterBy>>,\n  handleFilterInput: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  setFilterInput: Dispatch<SetStateAction<string>>,\n  filterInput: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  handleFilterInput,\n  setFilterInput,\n  filterInput,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilter = event.target.value as FilterBy;\n\n    setFilterBy(selectedFilter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option value={FilterBy.All}>All</option>\n            <option value={FilterBy.Active}>Active</option>\n            <option value={FilterBy.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleFilterInput}\n          value={filterInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            style={{ visibility: filterInput ? 'visible' : 'hidden' }}\n            onClick={() => setFilterInput('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { User } from './types/User';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoFilter } from './components/TodoFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loadingAll, setAllLoading] = useState(false);\n  const [loadingModal, setModalLoading] = useState(false);\n  const [todoModal, setTodoModal] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.All);\n  const [filterInput, setFilterInput] = useState('');\n  const filteredTodos = useMemo(() => {\n    switch (filterBy) {\n      case FilterBy.All:\n        return todos;\n      case FilterBy.Active:\n        return todos.filter(toddo => !toddo.completed);\n      case FilterBy.Completed:\n        return todos.filter(toddo => toddo.completed);\n      default:\n        return todos;\n    }\n  }, [todos, filterBy]);\n  const [filteredTodosState, setFilteredTodosState] = useState(filteredTodos);\n\n  const handleFilterInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterInput(e.target.value);\n  };\n\n  useEffect(() => {\n    setFilteredTodosState(filteredTodos.filter(todo => todo.title.toLowerCase().includes(filterInput.toLowerCase())));\n  }, [filterInput, filteredTodos]);\n\n  const loadAllTodds = async () => {\n    const allGoods = await getTodos();\n\n    setTodos(allGoods);\n  };\n\n  const loadUser = async () => {\n    const userr = await getUser(1);\n\n    setUser(userr);\n  };\n\n  useEffect(() => {\n    setAllLoading(true);\n\n    setTimeout(() => {\n      loadAllTodds();\n      loadUser();\n      setAllLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                handleFilterInput={handleFilterInput}\n                setFilterInput={setFilterInput}\n                filterInput={filterInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                loadingAll ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filteredTodosState}\n                    setTodoModal={setTodoModal}\n                    setModalLoading={setModalLoading}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoModal && (\n        <TodoModal user={user} todoModal={todoModal} loadingModal={loadingModal} setTodoModal={setTodoModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}